DROP DATABASE IF EXISTS phone_book;
CREATE DATABASE phone_book;
USE phone_book;

CREATE TABLE adress(
  id_adress INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
  country VARCHAR(100) NOT NULL,
  street VARCHAR(100) NOT NULL,
  city VARCHAR(100) NOT NULL
);

CREATE TABLE users(
  id_user INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
  first_name VARCHAR(100) NOT NULL,
  second_name VARCHAR(100) NOT NULL,
  password VARCHAR(100) NOT NULL,
  adress_id INT UNSIGNED NOT NULL UNIQUE,
  created DATE NOT NULL,
  updated DATE NULL,
  FOREIGN KEY (adress_id) REFERENCES adress(id_adress) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TRIGGER created_time BEFORE INSERT ON users FOR EACH ROW SET NEW.created = CURRENT_DATE();
CREATE TRIGGER updated_time BEFORE UPDATE ON users FOR EACH ROW SET NEW.updated = CURRENT_DATE();

CREATE TABLE relationship(
	id_relation INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
  owner_id INT UNSIGNED NOT NULL,
  friend_id INT UNSIGNED NOT NULL,
  FOREIGN KEY (owner_id) REFERENCES users(id_user) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (friend_id) REFERENCES users(id_user) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE phone(
  id_phone INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
  number VARCHAR(100) NOT NULL UNIQUE,
  user_id INT UNSIGNED NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users(id_user) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE email(
  id_email INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
  email VARCHAR(100) NOT NULL UNIQUE,
  user_id INT UNSIGNED NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users(id_user) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE tokens(
  id_token INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
  email_id INT UNSIGNED NOT NULL UNIQUE,
  token_conf VARCHAR(40) NULL UNIQUE,
  token_reset VARCHAR(40) NULL UNIQUE,
  FOREIGN KEY (email_id) REFERENCES email(id_email) ON DELETE CASCADE ON UPDATE CASCADE
);
